// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  birthday DateTime
  createdAt DateTime @default(now())
  isActive Boolean @default(true)
  layOffDate DateTime? 
  employeeBranches EmployeeBranches[]
  role Role @relation(fields: [roleId], references: [id])
  roleId Int
  area Area @relation(fields: [areaId], references: [id])
  areaId Int
  assigned Project[]

  @@map("employees")
}

model Role {
  id Int @id @default(autoincrement())
  name String
  employee Employee[]

  @@map("roles")
}

model Area {
  id Int @id @default(autoincrement())
  name String
  employee Employee[]
}

model Branch {
  id Int @id @default(autoincrement())
  name String
  code String @default("BR")
  currency String
  measurement String
  employeeBranches EmployeeBranches[]
  film Film[]
  profile Profile[]
  lightSource LightSource[]
  powerSupply PowerSupply[]
  amplifier Amplifier[]
  accessory Accessory[]
  aditionalMaterials AditionalMaterials[]
  project Project[]
  installationCosts InstallationCosts[]

  @@map("branches")
}

model EmployeeBranches {
  id Int @id @default(autoincrement())
  employee Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int

  @@map("employee_branches")
}

model Film {
  id Int @id @default(autoincrement())
  name String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  rawCost Int
  manufacturedCost Int
  salesPrice Int?
  dealerPrice Int?

  luminaryFilm LuminaryFilm[]

  @@map("films")
}

model Profile {
  id Int @id @default(autoincrement())
  name String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  rawCostPerMeter Int
  rawCostPerKg Int
  salesPrice Int?
  dealerPrice Int?

  luminaryProfile LuminaryProfile[]

  @@map("profiles")
}

model LightSource {
  id Int @id @default(autoincrement())
  supplier String
  manufacturer String
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  volts String
  lumensPerMeter Int
  wattsPerMeter Int
  mAmpsPerMeter Int
  protection String
  metersPerRoll Int
  rollCost Int
  meterCost Int
  salesPrice Int?
  dealerPrice Int?

  luminaryLightSource LuminaryLightSource[]

  @@map("light_sources")
}

model PowerSupply {
  id Int @id @default(autoincrement())
  supplier String
  manufacturer String
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  volts String
  watts Int
  mAmps Int
  protection String
  cost Int
  salesPrice Int?
  dealerPrice Int?

  luminarypowerSupply LuminaryPowerSupply[]


  @@map("power_supplies")
}

model Amplifier {
  id Int @id @default(autoincrement())
  supplier String
  manufacturer String
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  volts String
  mAmps Int
  protection String
  cost Int
  salesPrice Int?
  dealerPrice Int?

  luminaryAmplifier LuminaryAmplifier[]

  @@map("amplifiers")
}

model Accessory {
  id Int @id @default(autoincrement())
  supplier String
  manufacturer String
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  cost Int
  salesPrice Int?
  dealerPrice Int?

  luminaryAccessory LuminaryAccessory[]
  
  @@map("accessories")
}

model AditionalMaterials {
  id Int @id @default(autoincrement())
  supplier String
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  cost Int
  salesPrice Int?
  dealerPrice Int?

  luminaryAditionalMaterial LuminaryAditionalMaterial[]
  
  @@map("aditional_materials")
}

model InstallationCosts {
  id Int @id @default(autoincrement())
  name String
  type String
  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int
  cost Int
  salesPrice Int?
  dealerPrice Int?

  projectInstallation ProjectInstallation[]
  
  @@map("installation_costs")
}

model Project {
  id Int @id @default(autoincrement())
  code String
  name String
  client String
  information String
  description String?

  branch Branch @relation(fields: [branchId], references: [id])
  branchId Int

  address String

  location Location @relation(fields: [locationId], references: [id])
  locationId Int

  totalCost Int?
  salePrice Int?

  status Status @relation(fields: [statusId], references: [id])
  statusId Int @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  specifier Specifier? @relation(fields: [specifierId], references: [id])  
  specifierId Int?

  dealer Dealer? @relation(fields: [dealerId], references: [id])  
  dealerId Int?

  assigned Employee @relation(fields: [assignedId], references: [id])
  assignedId Int

  luminary Luminary[]
  projectInstallation ProjectInstallation[]



  @@map("projects")
}

model Luminary {
  id Int @id @default(autoincrement())

  description String
  quantity Int

  project Project @relation(fields: [projectId], references: [id])  
  projectId Int

  luminaryFilm LuminaryFilm[]
  luminaryProfile LuminaryProfile[]
  luminaryLightSource LuminaryLightSource[]
  luminarypowerSupply LuminaryPowerSupply[]
  luminaryAmplifier LuminaryAmplifier[]
  luminaryAccessory LuminaryAccessory[]
  luminaryAditionalMaterial LuminaryAditionalMaterial[]

}

model LuminaryFilm {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  film Film @relation(fields: [filmId], references: [id])  
  filmId Int
  filmQuantity Float

  @@map("luminary_film")
}

model LuminaryProfile {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  profile Profile @relation(fields: [profileId], references: [id])  
  profileId Int
  profileQuantity Float

  @@map("luminary_profile")
}

model LuminaryLightSource {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  lightSource LightSource @relation(fields: [lightSourceId], references: [id])  
  lightSourceId Int
  lightSourceQuantity Float

  @@map("luminary_light_source")
}

model LuminaryPowerSupply {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  powerSupply PowerSupply @relation(fields: [powerSupplyId], references: [id])  
  powerSupplyId Int
  powerSupplyQuantity Int

  @@map("luminary_power_supply")
}

model LuminaryAmplifier {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  amplifier Amplifier @relation(fields: [amplifierId], references: [id])  
  amplifierId Int
  amplifierQuantity Int

  @@map("luminary_amplifier")
}

model LuminaryAccessory {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  accessory Accessory @relation(fields: [accessoryId], references: [id])  
  accessoryId Int
  accessoryQuantity Int

  @@map("luminary_accessory")
}

model LuminaryAditionalMaterial {
  id Int @id @default(autoincrement())

  luminary Luminary @relation(fields: [luminaryId], references: [id])
  luminaryId Int

  aditionalMaterial AditionalMaterials @relation(fields: [aditionalMaterialId], references: [id])  
  aditionalMaterialId Int
  aditionalMaterialQuantity Float

  @@map("luminary_aditional_material")
}

model ProjectInstallation {
  id Int @id @default(autoincrement())

  installationCost InstallationCosts @relation(fields: [installationCostId], references: [id])  
  installationCostId Int
  installationCostQuantity Int

  project Project @relation(fields: [projectId], references: [id])  
  projectId Int

  @@map("project_installation")
}

model Status {
  id Int @id @default(autoincrement())
  name String @unique

  project Project[]

  @@map("status")
}

model Specifier {
  id Int @id @default(autoincrement())
  name String
  email String?
  phone String?
  birthday DateTime?
  comission Int
  company String?

  project Project[]  

  @@map("specifiers")  
}

model Dealer {
  id Int @id @default(autoincrement())
  name String
  email String?
  phone String?
  comission Int
  assignedContact String?

  project Project[]  

  @@map("dealers")  
}

model Location {
  id Int @id @default(autoincrement())
  cityId Int
  cityName String
  stateId Int
  stateCode String
  stateName String
  countryId Int
  countryCode String
  countryName String

  project Project[]

  @@map("locations") 
}
